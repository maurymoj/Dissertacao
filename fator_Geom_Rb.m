function [R_b] = fator_Geom_Rb(lat, n, beta_sup, gamma_sup, omega_1, omega_2, varargin)

%====================== Fator geométrico R_b =======================%
% Entradas: lat       - latitude local [º]                          %
%           n         - dia do ano                                  %
%           beta_sup  - Inclinação da superfície [º]                %
%           gamma_sup - Orientação da superfície [º]                %
%           omega_1   - hora solar de inicio do intervalo [º]       %
%           omega_2   - hora solar de termino do intervalo [º]      %
%           omega_s   - hora solar de por-do-sol [º]  (opcional)    %
%           delta     - declinação solar [º]          (opcional)    %
% Saída: R_b - Fator geométrico,adimensional, R_b = I_b_t/I_b       %
%===================================================================%

if  size(varargin,2) < 1
    B = (n - 1)*360/365; % Variável auxiliar
    delta = 180/pi* ( 0.006918 - 0.399912*cosd(B) + 0.070257*sind(B)...
                    - 0.006758*cosd(2*B) + 0.000907*sind(2*B) ...
                    - 0.002679*cosd(3*B) + 0.00148*sind(3*B) );% Declinação solar
    omega_s = acosd(-tand(lat)*tand(delta)); % Ângulo horário de por-do-sol
elseif size(varargin,2) < 2
    omega_s = varargin{1};
    B = (n - 1)*360/365;
    delta = 180/pi* ( 0.006918 - 0.399912*cosd(B) + 0.070257*sind(B)...
                    - 0.006758*cosd(2*B) + 0.000907*sind(2*B) ...
                    - 0.002679*cosd(3*B) + 0.00148*sind(3*B) );  
elseif size(varargin,2) < 3
    omega_s = varargin{1};
    delta = varargin{2};
end

n_horas = size(omega_1,2);

a = zeros(length(n),n_horas);
b = zeros(length(n),n_horas);
R_b = zeros(length(n),n_horas);

if size(omega_1,1)==1
    % Se omega_1 e omega_2 estão dentro do intervalo de -omega_s a omega_s
    a = a + ((ones(length(n),1)*omega_2 > -omega_s'*ones(1,n_horas) & ones(length(n),1)*omega_1 >= -omega_s'*ones(1,n_horas)) & (ones(length(n),1)*omega_2 <= omega_s'*ones(1,n_horas) & ones(length(n),1)*omega_1 < omega_s'*ones(1,n_horas))).*(...
        (sind(delta)'*ones(1,n_horas)*sind(lat).*cosd(beta_sup)...
         - sind(delta)'*ones(1,n_horas)*cosd(lat).*sind(beta_sup).*cosd(gamma_sup)).*(ones(length(n),1)*(omega_2 - omega_1))*pi/180 ...
       +(cosd(delta)'*ones(1,n_horas)*cosd(lat).*cosd(beta_sup)...
         + cosd(delta)'*ones(1,n_horas)*sind(lat).*sind(beta_sup).*cosd(gamma_sup)).*(ones(length(n),1)*(sind(omega_2) - sind(omega_1)))...
       -(cosd(delta)'*ones(1,n_horas).*sind(beta_sup).*sind(gamma_sup)).*(ones(length(n),1)*(cosd(omega_2) - cosd(omega_1))));

    b = b + ((ones(length(n),1)*omega_2 >= -omega_s'*ones(1,n_horas) & ones(length(n),1)*omega_1 > -omega_s'*ones(1,n_horas)) & (ones(length(n),1)*omega_2 < omega_s'*ones(1,n_horas) & ones(length(n),1)*omega_1 < omega_s'*ones(1,n_horas))).*(...
        (cosd(lat)*cosd(delta)'*ones(1,n_horas)).*(ones(length(n),1)*(sind(omega_2) - sind(omega_1)))...
        + sind(lat)*sind(delta)'*ones(1,n_horas).*(ones(length(n),1)*(omega_2 - omega_1))*pi/180);

    % Se omega_2 > -omega_s e omega_1 < -omega_s
    a = a + (ones(length(n),1)*omega_2 > -omega_s'*ones(1,n_horas) & ones(length(n),1)*omega_1 <= -omega_s'*ones(1,n_horas)).*(...
         (sind(delta)'*ones(1,n_horas)*sind(lat).*cosd(beta_sup)...
          - sind(delta)'*ones(1,n_horas)*cosd(lat).*sind(beta_sup).*cosd(gamma_sup)).*(ones(length(n),1)*omega_2 - (-omega_s)'*ones(1,n_horas))*pi/180 ...
        +(cosd(delta)'*ones(1,n_horas)*cosd(lat).*cosd(beta_sup)...
          + cosd(delta)'*ones(1,n_horas)*sind(lat).*sind(beta_sup).*cosd(gamma_sup)).*(sind(ones(length(n),1)*omega_2) - sind(-omega_s'*ones(1,n_horas)))...
        -(cosd(delta)'*ones(1,n_horas).*sind(beta_sup).*sind(gamma_sup)).*(cosd(ones(length(n),1)*omega_2) - cosd(-omega_s'*ones(1,n_horas))));

    b = b + (ones(length(n),1)*omega_2 > -omega_s'*ones(1,n_horas) & ones(length(n),1)*omega_1 < -omega_s'*ones(1,n_horas)).*(...
         (cosd(lat)*cosd(delta)'*ones(1,n_horas)).*(sind(ones(length(n),1)*omega_2) - sind(-omega_s'*ones(1,n_horas)))...
         + sind(lat)*sind(delta)'*ones(1,n_horas).*(ones(length(n),1)*omega_2 - (-omega_s)'*ones(1,n_horas))*pi/180);

    % Se omega_1 <= omega_s e omega_2 >= omega_s
    a = a + (ones(length(n),1)*omega_2 > omega_s'*ones(1,n_horas) & ones(length(n),1)*omega_1 < omega_s'*ones(1,n_horas)).*(...
        (sind(delta)'*ones(1,n_horas)*sind(lat).*cosd(beta_sup)...
         - sind(delta)'*ones(1,n_horas)*cosd(lat).*sind(beta_sup).*cosd(gamma_sup)).*(omega_s'*ones(1,n_horas) - ones(length(n),1)*omega_1)*pi/180 ...
       +(cosd(delta)'*ones(1,n_horas)*cosd(lat).*cosd(beta_sup)...
         + cosd(delta)'*ones(1,n_horas)*sind(lat).*sind(beta_sup).*cosd(gamma_sup)).*(sind(omega_s'*ones(1,n_horas)) - sind(ones(length(n),1)*omega_1))...
       -(cosd(delta)'*ones(1,n_horas).*sind(beta_sup).*sind(gamma_sup)).*(cosd(omega_s'*ones(1,n_horas)) - cosd(ones(length(n),1)*omega_1)));

    b = b + (ones(length(n),1)*omega_2 >= omega_s'*ones(1,n_horas) & ones(length(n),1)*omega_1 < omega_s'*ones(1,n_horas)).*(...
        (cosd(lat)*cosd(delta)'*ones(1,n_horas)).*(sind(omega_s'*ones(1,n_horas)) - sind(ones(length(n),1)*omega_1))...
        + sind(lat)*sind(delta)'*ones(1,n_horas).*(omega_s'*ones(1,n_horas) - ones(length(n),1)*omega_1)*pi/180);
    R_b = (a./b);
    R_b(b == 0) = 0;
    
elseif size(omega_1,1) > 1
    delta = delta'*ones(1,n_horas);
    omega = (omega_1+omega_2)./2;
    
    % Se omega_1 e omega_2 estão dentro do intervalo de -omega_s a omega_s
    R_b = R_b + ( ( omega_2 > -omega_s'*ones(1,n_horas) & omega_1 >= -omega_s'*ones(1,n_horas) ) & ( omega_2 <= omega_s'*ones(1,n_horas) & omega_1 < omega_s'*ones(1,n_horas) ) ).*...
            ( cosd(lat+beta_sup).*cosd(delta).*cosd(omega)+sind(lat+beta_sup).*sind(delta))./...
            ( cosd(lat)*cosd(delta).*cosd(omega)+sind(lat)*sind(delta));
        
%     a = a + ( ( omega_2 > -omega_s'*ones(1,n_horas) & omega_1 >= -omega_s'*ones(1,n_horas) ) & ( omega_2 <= omega_s'*ones(1,n_horas) & omega_1 < omega_s'*ones(1,n_horas) ) ).*(...
%         (sind(delta)*sind(lat).*cosd(beta_sup)...
%          - sind(delta)*cosd(lat).*sind(beta_sup).*cosd(gamma_sup)).*(omega_2 - omega_1)*pi/180 ...
%        +(cosd(delta)*cosd(lat).*cosd(beta_sup)...
%          + cosd(delta)*sind(lat).*sind(beta_sup).*cosd(gamma_sup)).*(sind(omega_2) - sind(omega_1))...
%        -(cosd(delta).*sind(beta_sup).*sind(gamma_sup)).*(cosd(omega_2) - cosd(omega_1)));
% 
%     b = b + ( ( omega_2 >= -omega_s'*ones(1,n_horas) & omega_1 > -omega_s'*ones(1,n_horas) ) & ( omega_2 < omega_s'*ones(1,n_horas) & omega_1 < omega_s'*ones(1,n_horas) ) ).*(...
%         (cosd(lat)*cosd(delta)).*(sind(omega_2) - sind(omega_1)...
%         + sind(lat)*sind(delta).*(omega_2 - omega_1))*pi/180);

%     % Se omega_2 > -omega_s e omega_1 < -omega_s
%     a = a + ( omega_2 > -omega_s'*ones(1,n_horas) & omega_1 <= -omega_s'*ones(1,n_horas)).*(...
%          (sind(delta)*sind(lat).*cosd(beta_sup)...
%           - sind(delta)*cosd(lat).*sind(beta_sup).*cosd(gamma_sup)).*(omega_2 - (-omega_s)'*ones(1,n_horas))*pi/180 ...
%         +(cosd(delta)*cosd(lat).*cosd(beta_sup)...
%           + cosd(delta)*sind(lat).*sind(beta_sup).*cosd(gamma_sup)).*(sind(omega_2) - sind(-omega_s'*ones(1,n_horas)))...
%         -(cosd(delta).*sind(beta_sup).*sind(gamma_sup)).*(cosd(omega_2) - cosd(-omega_s'*ones(1,n_horas))));
% 
%     b = b + ( omega_2 > -omega_s'*ones(1,n_horas) & omega_1 < -omega_s'*ones(1,n_horas) ).*(...
%          (cosd(lat)*cosd(delta)).*(sind(omega_2) - sind(-omega_s'*ones(1,n_horas)))...
%          + sind(lat)*sind(delta).*(omega_2 - (-omega_s)'*ones(1,n_horas))*pi/180);
% 
%     % Se omega_1 <= omega_s e omega_2 >= omega_s
%     a = a + ( omega_2 > omega_s'*ones(1,n_horas) & omega_1 < omega_s'*ones(1,n_horas) ).*(...
%         (sind(delta)*sind(lat).*cosd(beta_sup)...
%          - sind(delta)*cosd(lat).*sind(beta_sup).*cosd(gamma_sup)).*(omega_s'*ones(1,n_horas) - omega_1)*pi/180 ...
%        +(cosd(delta)*cosd(lat).*cosd(beta_sup)...
%          + cosd(delta)*sind(lat).*sind(beta_sup).*cosd(gamma_sup)).*(sind(omega_s'*ones(1,n_horas)) - sind(omega_1))...
%        -(cosd(delta).*sind(beta_sup).*sind(gamma_sup)).*(cosd(omega_s'*ones(1,n_horas)) - cosd(omega_1)));
% 
%     b = b + ( omega_2 >= omega_s'*ones(1,n_horas) & omega_1 < omega_s'*ones(1,n_horas)).*(...
%         (cosd(lat)*cosd(delta)).*(sind(omega_s'*ones(1,n_horas)) - sind(omega_1))...
%         + sind(lat)*sind(delta).*(omega_s'*ones(1,n_horas) - omega_1)*pi/180);
   
end

R_b(R_b < 0) = 0;